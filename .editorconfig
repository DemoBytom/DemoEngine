# Suppress: EC114
# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
# Taken and modified from https://gist.github.com/DemoBytom/19d1005b84eee5e7afba2b0648924c1d

[*]
#Core editorconfig formatting - indentation
end_of_line              = crlf
indent_size              = 4
charset                  = utf-8
trim_trailing_whitespace = true
#use soft tabs (spaces) for indentation
indent_style             = space
insert_final_newline     = false
tab_width                = unset
[*.{json,xml,csproj,props}]
indent_size              = 2
[*.md]
trim_trailing_whitespace = false

# Generated code
[*.Designer.cs]
generated_code = true

[*.{cs}]
# Default copyright header for source files
file_header_template  = Copyright © Michał Dembski and contributors.\nDistributed under MIT license. See LICENSE file in the root for more information.
# Dotnet code style settings:
# Organize usings
dotnet_sort_system_directives_first                                      = true
dotnet_separate_import_directive_groups                                  = false
csharp_using_directive_placement                                         = outside_namespace:error
# "This." and "Me." qualifiers
dotnet_style_qualification_for_field                                     = false:suggestion
dotnet_style_qualification_for_property                                  = false:suggestion
dotnet_style_qualification_for_method                                    = false:suggestion
dotnet_style_qualification_for_event                                     = false:suggestion
# Language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members               = true:suggestion
dotnet_style_predefined_type_for_member_access                           = true:suggestion
# Modifier preferences
dotnet_style_require_accessibility_modifiers                             = for_non_interface_members:suggestion
csharp_preferred_modifier_order                                          = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
dotnet_style_readonly_field                                              = true:suggestion
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators                  = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators                       = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators                              = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators                  = never_if_unnecessary:silent
# Expression-level preferences
dotnet_style_object_initializer                                          = true:suggestion
dotnet_style_collection_initializer                                      = true:suggestion
dotnet_style_explicit_tuple_names                                        = true:suggestion
dotnet_style_prefer_inferred_tuple_names                                 = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names                 = true:suggestion
dotnet_style_prefer_auto_properties                                      = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method         = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment               = true:suggestion
dotnet_style_prefer_conditional_expression_over_return                   = true:suggestion
# "Null" checking preferences
dotnet_style_coalesce_expression                                         = true:suggestion
dotnet_style_null_propagation                                            = true:suggestion
dotnet_style_prefer_compound_assignment                                  = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions                       = true:suggestion
dotnet_style_prefer_simplified_interpolation                             = true:suggestion

## C# code style settings
# Implicit and explicit types
csharp_style_var_for_built_in_types                                      = true:suggestion
csharp_style_var_when_type_is_apparent                                   = true:suggestion
csharp_style_var_elsewhere                                               = true:suggestion
# Expression-bodied members
csharp_style_expression_bodied_methods                                   = true:suggestion
csharp_style_expression_bodied_constructors                              = true:suggestion
csharp_style_expression_bodied_operators                                 = true:suggestion
csharp_style_expression_bodied_properties                                = true:suggestion
csharp_style_expression_bodied_indexers                                  = true:suggestion
csharp_style_expression_bodied_accessors                                 = true:suggestion
csharp_style_expression_bodied_lambdas                                   = true:suggestion
csharp_style_expression_bodied_local_functions                           = true:suggestion
# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check                    = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check                    = true:suggestion
csharp_style_prefer_not_pattern                                          = true:warning
csharp_style_prefer_pattern_matching                                     = true:suggestion
# Inlined variable declarations
csharp_style_inlined_variable_declaration                                = true:suggestion
# Expression-level preferences
csharp_style_deconstructed_variable_declaration                          = true:suggestion
csharp_prefer_simple_default_expression                                  = true:suggestion
csharp_style_pattern_local_over_anonymous_function                       = true:suggestion
csharp_prefer_simple_using_statement                                     = true:suggestion
csharp_style_prefer_index_operator                                       = true:warning
csharp_style_prefer_switch_expression                                    = true:suggestion
csharp_style_prefer_range_operator                                       = true:suggestion
csharp_style_unused_value_assignment_preference                          = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference                = discard_variable:suggestion
# "Null" checking preferences
csharp_style_throw_expression                                            = true:suggestion
csharp_style_conditional_delegate_call                                   = true:suggestion
## Code block preferences
csharp_prefer_braces                                                     = true:suggestion

### Formatting conventions
## C# formatting settings
# Newline options
csharp_new_line_before_open_brace                                        = all
csharp_new_line_before_else                                              = true
csharp_new_line_before_catch                                             = true
csharp_new_line_before_finally                                           = true
csharp_new_line_before_members_in_object_initializers                    = true
csharp_new_line_before_members_in_anonymous_types                        = true
csharp_new_line_between_query_expression_clauses                         = true
#Indentation options
csharp_indent_case_contents                                              = true
csharp_indent_switch_labels                                              = true
csharp_indent_labels                                                     = flush_left
csharp_indent_case_contents_when_block                                   = false
# Spacing options
csharp_space_after_cast                                                  = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_between_parentheses                                         = false
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
#Wrapping options
csharp_preserve_single_line_statements                                   = false
csharp_preserve_single_line_blocks                                       = true

### Naming conventions
## Capitalization styles
dotnet_naming_style.pascal_case_style.capitalization                        = pascal_case
dotnet_naming_style.all_upper_style.capitalization                          = all_upper
dotnet_naming_style.first_word_lower_style.capitalization                   = camel_case
dotnet_naming_style.first_word_lower_style_undersore_prefix.capitalization  = camel_case
dotnet_naming_style.first_word_lower_style_undersore_prefix.required_prefix = _ 

# Const members must be all upper (const_members_must_be_caps)
dotnet_naming_rule.const_members_must_be_caps.style             = all_upper_style
dotnet_naming_rule.const_members_must_be_caps.severity          = warning 
dotnet_naming_rule.const_members_must_be_caps.symbols           = const_symbols
dotnet_naming_symbols.const_symbols.applicable_kinds            = property,method,event,delegate,field,local
dotnet_naming_symbols.const_symbols.required_modifiers          = const

# Public members must be capitalized (public_members_must_be_capitalized)
dotnet_naming_rule.public_members_must_be_capitalized.symbols   = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.severity  = warning 
dotnet_naming_symbols.public_symbols.applicable_kinds           = property,method,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public, protected
dotnet_naming_rule.public_members_must_be_capitalized.style     = pascal_case_style

# Private members must be capitalized (private_members_must_be_lower_underscore)
dotnet_naming_rule.private_members_must_be_lower_underscore.symbols   = private_symbols
dotnet_naming_rule.private_members_must_be_lower_underscore.severity  = warning 
dotnet_naming_symbols.private_symbols.applicable_kinds                = field
dotnet_naming_symbols.private_symbols.applicable_accessibilities      = private, protected
dotnet_naming_rule.private_members_must_be_lower_underscore.style     = first_word_lower_style_undersore_prefix

# local variables and parameters members must start with lower letter (locals_must_be_camel_case)
dotnet_naming_rule.locals_must_be_camel_case.symbols       = local_symbols
dotnet_naming_rule.locals_must_be_camel_case.severity      = warning 
dotnet_naming_symbols.local_symbols.applicable_kinds       = local, parameter
dotnet_naming_rule.locals_must_be_camel_case.style         = first_word_lower_style

# local methods must be pascal case (local_methods_must_be_pascal_case)
dotnet_naming_rule.local_methods_must_be_pascal_case.symbols       = local_methods_symbols
dotnet_naming_rule.local_methods_must_be_pascal_case.severity      = warning 
dotnet_naming_symbols.local_methods_symbols.applicable_kinds       = local_function
dotnet_naming_rule.local_methods_must_be_pascal_case.style         = pascal_case_style

### Analyzers and diagnostics
dotnet_diagnostic.<rule_id>.severity = unset
dotnet_analyzer_diagnostic.severity = unset
dotnet_analyzer_diagnostic.category-<category>.severity = unset
dotnet_remove_unnecessary_suppression_exclusions = all
dotnet_code_quality_unused_parameters = all
